{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dell/Bureau/Web-projects/react-context-hooks/book-list/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useReducer } from 'react';\nimport uuid from 'uuid/v1';\nimport { bookReducer } from '../reducers/bookReducer';\nexport const bookContext = /*#__PURE__*/createContext(); // function BookContextProvider(props) {\n//        const [books,setBook] = useState([\n//            {title:\"Tamachahout n mama jaja\",author:\"Djamila HAMDAOUI \",id:1},\n//            {title:\"Python selon BigNova\",author:\"BigNova\",id:2}\n//        ])\n//        const addBook = (title,author) =>{\n//            setBook([...books,{title,author:author,id:uuid()}])\n//        }\n//        const removeBook = (id) =>{\n//            setBook(books.filter(book=>{\n//               return book.id !== id \n//            }))\n//        }\n//        return(\n//            <bookContext.Provider value={{books,addBook,removeBook}}>\n//                 {props.children}\n//            </bookContext.Provider>\n//        )\n// }\n\nfunction BookContextProvider(props) {\n  _s();\n\n  const [books, setBook] = useReducer(bookReducer, []);\n\n  const addBook = (title, author) => {\n    setBook([...books, {\n      title,\n      author: author,\n      id: uuid()\n    }]);\n  };\n\n  const removeBook = id => {\n    setBook(books.filter(book => {\n      return book.id !== id;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(bookContext.Provider, {\n    value: {\n      books,\n      addBook,\n      removeBook\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookContextProvider, \"dNNyipuQIQs4xVtVyvLDIzTHX9o=\");\n\n_c = BookContextProvider;\nexport default BookContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookContextProvider\");","map":{"version":3,"sources":["/home/dell/Bureau/Web-projects/react-context-hooks/book-list/src/context/Context.js"],"names":["React","createContext","useState","useReducer","uuid","bookReducer","bookContext","BookContextProvider","props","books","setBook","addBook","title","author","id","removeBook","filter","book","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,QAA5B,EAAqCC,UAArC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC,C,CAEP;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAGA,SAASM,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEhC,QAAM,CAACC,KAAD,EAAOC,OAAP,IAAkBP,UAAU,CAACE,WAAD,EAAa,EAAb,CAAlC;;AAEA,QAAMM,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC7BH,IAAAA,OAAO,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACG,MAAAA,KAAD;AAAOC,MAAAA,MAAM,EAACA,MAAd;AAAqBC,MAAAA,EAAE,EAACV,IAAI;AAA5B,KAAV,CAAD,CAAP;AACH,GAFD;;AAGA,QAAMW,UAAU,GAAID,EAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACD,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAE;AACxB,aAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACF,KAFO,CAAD,CAAP;AAGH,GAJD;;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACL,MAAAA,KAAD;AAAOE,MAAAA,OAAP;AAAeI,MAAAA;AAAf,KAA7B;AAAA,cACMP,KAAK,CAACU;AADZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAnBQX,mB;;KAAAA,mB;AAqBT,eAAeA,mBAAf","sourcesContent":["import React,{createContext,useState,useReducer} from 'react'\nimport uuid from 'uuid/v1'\nimport { bookReducer } from '../reducers/bookReducer';\nexport const bookContext = createContext();\n \n// function BookContextProvider(props) {\n    \n//        const [books,setBook] = useState([\n//            {title:\"Tamachahout n mama jaja\",author:\"Djamila HAMDAOUI \",id:1},\n//            {title:\"Python selon BigNova\",author:\"BigNova\",id:2}\n//        ])\n\n//        const addBook = (title,author) =>{\n//            setBook([...books,{title,author:author,id:uuid()}])\n//        }\n//        const removeBook = (id) =>{\n//            setBook(books.filter(book=>{\n//               return book.id !== id \n//            }))\n//        }\n\n//        return(\n//            <bookContext.Provider value={{books,addBook,removeBook}}>\n//                 {props.children}\n//            </bookContext.Provider>\n//        )\n    \n// }\n\n\nfunction BookContextProvider(props) {\n    \n    const [books,setBook] = useReducer(bookReducer,[])\n\n    const addBook = (title,author) =>{\n        setBook([...books,{title,author:author,id:uuid()}])\n    }\n    const removeBook = (id) =>{\n        setBook(books.filter(book=>{\n           return book.id !== id \n        }))\n    }\n\n    return(\n        <bookContext.Provider value={{books,addBook,removeBook}}>\n             {props.children}\n        </bookContext.Provider>\n    )\n \n}\n\nexport default BookContextProvider;"]},"metadata":{},"sourceType":"module"}